
// plain definitions
int x;
int y = 1;
const auto z = 2;

// function definitions
int f(float a, float b);

// overloaded function definitions
const int f(string c) {
	return 0;
}

int f(bool d) = true;

// templated function definitions
template <T>
T temp();

// overloaded templated function definitions
void temp() {
	return;
}

string temp() {
	return "";
}

const int temp() = 5;

// let variable definitions
let a = 1, b = 2.3;

// let function definitions
let x `add` y = x + y;
let const `add one to` x = x + 1;
let x `degrees` = x / 180 * math::PI;
let sum(x, y, z) = x + y + z;

// function defaults
void f(int x = 1) = null;
void f(null int x = 0, int y = 2, int z = 3) = null;
void f(null int x = 0) = null;

// 'where'
let length(x1, y1, x2, y2) = math::sqrt( dx * dx + dy * dy )
	where dx = x2 - x1
	where dy = y2 - y1;

template<T>
auto length(T x1, y1, x2, y2) = math::sqrt( dx * dx + dy * dy )
	where dx = x2 - x1
	where dy = y2 - y1;
